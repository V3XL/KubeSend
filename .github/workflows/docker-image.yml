name: Docker Image CI

on:
  push:
    branches: [ "dev" ] 
    paths:
      - 'Cargo.toml'  # Only run when Cargo.toml changes
  pull_request:
    branches: [ "dev" ]
    paths:
      - 'Cargo.toml'  # Only run when Cargo.toml changes

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check.outputs.should_build }}
      version: ${{ steps.current_version.outputs.version }}
    steps:
      - name: Checkout current code
        uses: actions/checkout@v4
        with:
          path: current

      - name: Get current version
        id: current_version
        working-directory: current
        run: |
          CURRENT_VERSION=$(grep -m1 '^version = ' Cargo.toml | cut -d '"' -f2)
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Checkout previous code (main branch)
        uses: actions/checkout@v4
        with:
          ref: dev
          path: dev
          fetch-depth: 1

      - name: Get previous version
        id: previous_version
        working-directory: main
        run: |
          PREVIOUS_VERSION=$(grep -m1 '^version = ' Cargo.toml | cut -d '"' -f2)
          echo "version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
          echo "Previous version: $PREVIOUS_VERSION"

      - name: Check if version changed
        id: check
        run: |
          if [ "${{ steps.current_version.outputs.version }}" != "${{ steps.previous_version.outputs.version }}" ]; then
            echo "Version changed from ${{ steps.previous_version.outputs.version }} to ${{ steps.current_version.outputs.version }}"
            echo "should_build=true" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged, skipping build"
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check-version
    if: needs.check-version.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_SECRET }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/kubesend:${{ needs.check-version.outputs.version }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/kubesend:latest